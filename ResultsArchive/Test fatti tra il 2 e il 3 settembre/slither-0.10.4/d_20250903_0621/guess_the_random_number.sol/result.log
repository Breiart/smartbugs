'solc --version' running
'solc /sb/guess_the_random_number.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/guess_the_random_number.sol:
/sb/guess_the_random_number.sol:12:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function GuessTheRandomNumberChallenge() public payable {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/guess_the_random_number.sol:15:24: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        answer = uint8(keccak256(block.blockhash(block.number - 1), now));
                       ^-----------------------------------------------^
/sb/guess_the_random_number.sol:15:34: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        answer = uint8(keccak256(block.blockhash(block.number - 1), now));
                                 ^-------------^


GuessTheRandomNumberChallenge.guess(uint8) (../../sb/guess_the_random_number.sol#22-28) sends eth to arbitrary user
	Dangerous calls:
	- msg.sender.transfer(2000000000000000000) (../../sb/guess_the_random_number.sol#26)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#functions-that-send-ether-to-arbitrary-destinations

GuessTheRandomNumberChallenge.guess(uint8) (../../sb/guess_the_random_number.sol#22-28) uses a dangerous strict equality:
	- n == answer (../../sb/guess_the_random_number.sol#25)
GuessTheRandomNumberChallenge.isComplete() (../../sb/guess_the_random_number.sol#18-20) uses a dangerous strict equality:
	- address(this).balance == 0 (../../sb/guess_the_random_number.sol#19)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

GuessTheRandomNumberChallenge.guess(uint8) (../../sb/guess_the_random_number.sol#22-28) uses timestamp for comparisons
	Dangerous comparisons:
	- n == answer (../../sb/guess_the_random_number.sol#25)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected answer = uint8(keccak256()(block.blockhash(block.number - 1),now)) (../../sb/guess_the_random_number.sol#15):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.21 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.21 (../../sb/guess_the_random_number.sol#7)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity
/sb/guess_the_random_number.sol analyzed (1 contracts with 93 detectors), 7 result(s) found
