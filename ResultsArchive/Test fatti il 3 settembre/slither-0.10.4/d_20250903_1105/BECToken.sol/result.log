'solc --version' running
'solc /sb/BECToken.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/BECToken.sol:
/sb/BECToken.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
/sb/BECToken.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
/sb/BECToken.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
/sb/BECToken.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
/sb/BECToken.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
/sb/BECToken.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
/sb/BECToken.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
/sb/BECToken.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/BECToken.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).


Version constraint ^0.4.16 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.16 (../../sb/BECToken.sol#7)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BasicToken.transfer(address,uint256)._to (../../sb/BECToken.sol#65) is not in mixedCase
Parameter BasicToken.transfer(address,uint256)._value (../../sb/BECToken.sol#65) is not in mixedCase
Parameter BasicToken.balanceOf(address)._owner (../../sb/BECToken.sol#81) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (../../sb/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (../../sb/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (../../sb/BECToken.sol#116) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (../../sb/BECToken.sol#138) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (../../sb/BECToken.sol#138) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (../../sb/BECToken.sol#150) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (../../sb/BECToken.sol#150) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._to (../../sb/BECToken.sol#249) is not in mixedCase
Parameter PausableToken.transfer(address,uint256)._value (../../sb/BECToken.sol#249) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._from (../../sb/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._to (../../sb/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.transferFrom(address,address,uint256)._value (../../sb/BECToken.sol#253) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._spender (../../sb/BECToken.sol#257) is not in mixedCase
Parameter PausableToken.approve(address,uint256)._value (../../sb/BECToken.sol#257) is not in mixedCase
Parameter PausableToken.batchTransfer(address[],uint256)._receivers (../../sb/BECToken.sol#261) is not in mixedCase
Parameter PausableToken.batchTransfer(address[],uint256)._value (../../sb/BECToken.sol#261) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

BecToken.BecToken() (../../sb/BECToken.sol#297-300) uses literals with too many digits:
	- totalSupply = 7000000000 * (10 ** (uint256(decimals))) (../../sb/BECToken.sol#298)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

BecToken.decimals (../../sb/BECToken.sol#292) should be constant 
BecToken.name (../../sb/BECToken.sol#289) should be constant 
BecToken.symbol (../../sb/BECToken.sol#290) should be constant 
BecToken.version (../../sb/BECToken.sol#291) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

batchTransfer(address[],uint256) should be declared external:
	- PausableToken.batchTransfer(address[],uint256) (../../sb/BECToken.sol#261-274)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/BECToken.sol analyzed (9 contracts with 93 detectors), 27 result(s) found
