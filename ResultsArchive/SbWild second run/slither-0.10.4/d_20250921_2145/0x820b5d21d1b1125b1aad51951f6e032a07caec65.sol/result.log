'solc --version' running
'solc /sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:60:40: Warning: "sha3" has been deprecated in favour of "keccak256"
    require(msg.sender == developer || sha3(password) == password_hash);
                                       ^------------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:60:40: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
    require(msg.sender == developer || sha3(password) == password_hash);
                                       ^------------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:60:40: Warning: The provided argument of type string memory is not implicitly convertible to expected type bytes memory.
    require(msg.sender == developer || sha3(password) == password_hash);
                                       ^------------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:146:26: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    contract_eth_value = this.balance - (claimed_bounty + withdraw_bounty);
                         ^----------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:162:13: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
    require(this.balance < eth_cap);
            ^----------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:15:3: Warning: No visibility specified. Defaulting to "public". 
  function transfer(address _to, uint256 _value) returns (bool success);
  ^--------------------------------------------------------------------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:16:3: Warning: No visibility specified. Defaulting to "public". 
  function balanceOf(address _owner) constant returns (uint256 balance);
  ^--------------------------------------------------------------------^
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:47:3: Warning: No visibility specified. Defaulting to "public". 
  function set_addresses(address _sale, address _token) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:58:3: Warning: No visibility specified. Defaulting to "public". 
  function activate_kill_switch(string password) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:72:3: Warning: No visibility specified. Defaulting to "public". 
  function withdraw(address user){
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:114:3: Warning: No visibility specified. Defaulting to "public". 
  function add_to_buy_bounty() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:122:3: Warning: No visibility specified. Defaulting to "public". 
  function add_to_withdraw_bounty() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:130:3: Warning: No visibility specified. Defaulting to "public". 
  function claim_bounty(){
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol:156:3: Warning: No visibility specified. Defaulting to "public". 
  function () payable {
  ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111):
	External calls:
	- contract_token_balance = token.balanceOf(address(this)) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#89)
	State variables written after the call(s):
	- balances[user] = 0 (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#97)
	MonethaBuyer.balances (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#21) can be used in cross function reentrancies:
	- MonethaBuyer.balances (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#21)
	- MonethaBuyer.fallback() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#156-165)
	- MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

MonethaBuyer.add_to_buy_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#114-119) should emit an event for: 
	- buy_bounty += msg.value (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#118) 
MonethaBuyer.add_to_withdraw_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#122-127) should emit an event for: 
	- withdraw_bounty += msg.value (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#126) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-arithmetic

MonethaBuyer.set_addresses(address,address)._sale (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#47) lacks a zero-check on :
		- sale = _sale (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#53)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111):
	External calls:
	- contract_token_balance = token.balanceOf(address(this)) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#89)
	State variables written after the call(s):
	- contract_eth_value -= balances[user] (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#95)
Reentrancy in MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111):
	External calls:
	- contract_token_balance = token.balanceOf(address(this)) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#89)
	- require(bool)(token.transfer(developer,fee)) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#101)
	- require(bool)(token.transfer(user,tokens_to_withdraw - fee)) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#103)
	External calls sending eth:
	- user.transfer(eth_to_withdraw) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#84)
	State variables written after the call(s):
	- withdraw_bounty -= claimed_bounty (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(bought_tokens || now > earliest_buy_time + 3600) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#74)
MonethaBuyer.claim_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#130-153) uses timestamp for comparisons
	Dangerous comparisons:
	- now < earliest_buy_time (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#134)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected require(bool)(msg.sender == developer || sha3()(password) == password_hash) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#60):
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.13 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput.
It is used by:
	- ^0.4.13 (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in MonethaBuyer.claim_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#130-153):
	- require(bool)(sale.call.value(contract_eth_value)()) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#150)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Function MonethaBuyer.set_addresses(address,address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#47-55) is not in mixedCase
Parameter MonethaBuyer.set_addresses(address,address)._sale (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#47) is not in mixedCase
Parameter MonethaBuyer.set_addresses(address,address)._token (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#47) is not in mixedCase
Function MonethaBuyer.activate_kill_switch(string) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#58-69) is not in mixedCase
Function MonethaBuyer.add_to_buy_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#114-119) is not in mixedCase
Function MonethaBuyer.add_to_withdraw_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#122-127) is not in mixedCase
Function MonethaBuyer.claim_bounty() (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#130-153) is not in mixedCase
Variable MonethaBuyer.buy_bounty (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#23) is not in mixedCase
Variable MonethaBuyer.withdraw_bounty (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#25) is not in mixedCase
Variable MonethaBuyer.bought_tokens (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#27) is not in mixedCase
Variable MonethaBuyer.contract_eth_value (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#29) is not in mixedCase
Variable MonethaBuyer.kill_switch (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#31) is not in mixedCase
Variable MonethaBuyer.password_hash (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#34) is not in mixedCase
Variable MonethaBuyer.earliest_buy_time (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#36) is not in mixedCase
Variable MonethaBuyer.eth_cap (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#38) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in MonethaBuyer.withdraw(address) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#72-111):
	External calls:
	- user.transfer(eth_to_withdraw) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#84)
	State variables written after the call(s):
	- withdraw_bounty -= claimed_bounty (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

MonethaBuyer.developer (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#40) should be constant 
MonethaBuyer.earliest_buy_time (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#36) should be constant 
MonethaBuyer.eth_cap (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#38) should be constant 
MonethaBuyer.password_hash (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#34) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

activate_kill_switch(string) should be declared external:
	- MonethaBuyer.activate_kill_switch(string) (../../sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol#58-69)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/0x820b5d21d1b1125b1aad51951f6e032a07caec65.sol analyzed (2 contracts with 93 detectors), 33 result(s) found
