'solc --version' running
'solc /sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

Contract locking ether found:
	Contract DCUCoin (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#135-210) has payable functions:
	 - DCUCoin.fallback() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#150-152)
	But does not have a function to withdraw the ether
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#contracts-that-lock-ether

Reentrancy in DSAuth.setAuthority(DSAuthority) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#31-37):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#33)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	State variables written after the call(s):
	- authority = authority_ (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#35)
	DSAuth.authority (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#15) can be used in cross function reentrancies:
	- DSAuth.authority (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#15)
	- DSAuth.isAuthorized(address,bytes4) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#44-54)
	- DSAuth.setAuthority(DSAuthority) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#31-37)
Reentrancy in DSAuth.setOwner(address) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#23-29):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#25)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	State variables written after the call(s):
	- owner = owner_ (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#27)
	DSAuth.owner (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#16) can be used in cross function reentrancies:
	- DSAuth.constructor() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#18-21)
	- DSAuth.isAuthorized(address,bytes4) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#44-54)
	- DSAuth.owner (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#16)
	- DSAuth.setOwner(address) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#23-29)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

DSAuth.setOwner(address).owner_ (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#23) lacks a zero-check on :
		- owner = owner_ (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#27)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Reentrancy in DCUCoin.setName(string) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#154-156):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#154)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	State variables written after the call(s):
	- name = token_name (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#155)
Reentrancy in DSStop.start() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#94-96):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#94)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	State variables written after the call(s):
	- stopped = false (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#95)
Reentrancy in DSStop.stop() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#90-92):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#90)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	State variables written after the call(s):
	- stopped = true (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#91)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in DSAuth.setAuthority(DSAuthority) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#31-37):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#33)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	Event emitted after the call(s):
	- LogSetAuthority(authority) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#36)
Reentrancy in DSAuth.setOwner(address) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#23-29):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#25)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	Event emitted after the call(s):
	- LogSetOwner(owner) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#28)
Reentrancy in DSStop.start() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#94-96):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#94)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,msg.value,msg.data) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#76)
		- note() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#94)
Reentrancy in DSStop.stop() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#90-92):
	External calls:
	- auth() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#90)
		- authority.canCall(src,this,sig) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#52)
	Event emitted after the call(s):
	- LogNote(msg.sig,msg.sender,foo,bar,msg.value,msg.data) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#76)
		- note() (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

DSMath.mul(uint256,uint256) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#109-111) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Version constraint ^0.4.23 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ABIEncoderV2PackedStorage_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData.
It is used by:
	- ^0.4.23 (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter DCUCoin.setName(string).token_name (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#154) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

DCUCoin.decimals (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#138) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

setName(string) should be declared external:
	- DCUCoin.setName(string) (../../sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol#154-156)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/0x0c93bd73cbb8b4a4abb8e811d5cb7887133ffa3b.sol analyzed (9 contracts with 93 detectors), 17 result(s) found
