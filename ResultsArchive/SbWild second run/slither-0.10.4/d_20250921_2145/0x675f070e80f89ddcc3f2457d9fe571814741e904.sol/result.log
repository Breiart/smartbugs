'solc --version' running
'solc /sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:16:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function DinosaurFarmer2() public{
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:49:67: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(this.balance,msg.value));
                                                                  ^----------^
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:60:47: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateTrade(eggs,marketEggs,this.balance);
                                              ^----------^
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:66:36: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return calculateEggBuy(eth,this.balance);
                                   ^----------^
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:83:16: Warning: Using contract member "balance" inherited from the address type is deprecated. Convert the contract to "address" type to access the member, for example use "address(contract).balance" instead.
        return this.balance;
               ^----------^
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol:68:5: Warning: Function state mutability can be restricted to pure
    function devFee(uint256 amount) public view returns(uint256){
    ^ (Relevant source part starts here and spans across multiple lines).


DinosaurFarmer2.getFreeShrimp() (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#76-81) uses a dangerous strict equality:
	- require(bool)(hatcheryShrimp[msg.sender] == 0) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#78)
DinosaurFarmer2.seedMarket(uint256) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#71-75) uses a dangerous strict equality:
	- require(bool)(marketEggs == 0) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#72)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

DinosaurFarmer2.seedMarket(uint256) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#71-75) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(marketEggs == 0) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#72)
DinosaurFarmer2.getFreeShrimp() (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#76-81) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(hatcheryShrimp[msg.sender] == 0) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#78)
DinosaurFarmer2.min(uint256,uint256) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#95-97) uses timestamp for comparisons
	Dangerous comparisons:
	- a < b (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#96)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.18 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.18 (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Variable DinosaurFarmer2.EGGS_TO_HATCH_1SHRIMP (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#5) is not in mixedCase
Variable DinosaurFarmer2.STARTING_SHRIMP (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#6) is not in mixedCase
Variable DinosaurFarmer2.PSN (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#7) is not in mixedCase
Variable DinosaurFarmer2.PSNH (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#8) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Reentrancy in DinosaurFarmer2.buyEggs() (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#47-53):
	External calls:
	- ceoAddress.transfer(devFee(msg.value)) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#51)
	State variables written after the call(s):
	- claimedEggs[msg.sender] = SafeMath.add(claimedEggs[msg.sender],eggsBought) (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#52)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-4

DinosaurFarmer2.EGGS_TO_HATCH_1SHRIMP (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#5) should be constant 
DinosaurFarmer2.PSN (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#7) should be constant 
DinosaurFarmer2.PSNH (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#8) should be constant 
DinosaurFarmer2.STARTING_SHRIMP (../../sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol#6) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/0x675f070e80f89ddcc3f2457d9fe571814741e904.sol analyzed (2 contracts with 93 detectors), 16 result(s) found
