'solc --version' running
'solc /sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:109:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BlockVentureCoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:211:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw; 
                        ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:213:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw; 
                                            ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:215:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;
                                                      ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:283:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;  
                        ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:285:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;  
                                       ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:287:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  
                                                      ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:289:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; 
                                                   ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:311:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw; 
                                            ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:329:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw; 
                                       ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:331:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw; 
                                                   ^---^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:225:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value); 
        ^-------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:243:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval( msg.sender ,_spender, _value);
        ^-------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:299:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:317:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:339:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(_from, _value);
        ^-----------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:7:5: Warning: No visibility specified. Defaulting to "public". 
    function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData);
    ^----------------------------------------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:19:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns(uint _totalSupply);
    ^---------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:23:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address who) constant returns(uint256);
    ^--------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:27:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address to, uint value) returns(bool ok);
    ^---------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:31:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address from, address to, uint value) returns(bool ok);
    ^---------------------------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:35:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address spender, uint value) returns(bool ok);
    ^-------------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:39:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address owner, address spender) constant returns(uint);
    ^------------------------------------------------------------------------^
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:109:5: Warning: No visibility specified. Defaulting to "public". 
    function BlockVentureCoin() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:143:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address tokenHolder) constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:153:5: Warning: No visibility specified. Defaulting to "public". 
    function totalSupply() constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:163:5: Warning: No visibility specified. Defaulting to "public". 
    function getAccountCount() constant returns(uint256) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:173:5: Warning: No visibility specified. Defaulting to "public". 
    function getAddress(uint slot) constant returns(address) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:209:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns(bool ok) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:237:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:253:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:271:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns(uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:281:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns(bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:309:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns(bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol:325:5: Warning: No visibility specified. Defaulting to "public". 
    function burnFrom(address _from, uint256 _value) returns(bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).


Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#211):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#213):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#215):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#283):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#285):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#287):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#289):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#311):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#329):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#331):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.11 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral.
It is used by:
	- ^0.4.11 (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract tokenRecipient (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#5-9) is not in CapWords
Parameter BlockVentureCoin.transfer(address,uint256)._to (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#209) is not in mixedCase
Parameter BlockVentureCoin.transfer(address,uint256)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#209) is not in mixedCase
Parameter BlockVentureCoin.approve(address,uint256)._spender (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#237) is not in mixedCase
Parameter BlockVentureCoin.approve(address,uint256)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#237) is not in mixedCase
Parameter BlockVentureCoin.approveAndCall(address,uint256,bytes)._spender (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#253) is not in mixedCase
Parameter BlockVentureCoin.approveAndCall(address,uint256,bytes)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#253) is not in mixedCase
Parameter BlockVentureCoin.approveAndCall(address,uint256,bytes)._extraData (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#253) is not in mixedCase
Parameter BlockVentureCoin.allowance(address,address)._owner (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#271) is not in mixedCase
Parameter BlockVentureCoin.allowance(address,address)._spender (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#271) is not in mixedCase
Parameter BlockVentureCoin.transferFrom(address,address,uint256)._from (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#281) is not in mixedCase
Parameter BlockVentureCoin.transferFrom(address,address,uint256)._to (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#281) is not in mixedCase
Parameter BlockVentureCoin.transferFrom(address,address,uint256)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#281) is not in mixedCase
Parameter BlockVentureCoin.burn(uint256)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#309) is not in mixedCase
Parameter BlockVentureCoin.burnFrom(address,uint256)._from (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#325) is not in mixedCase
Parameter BlockVentureCoin.burnFrom(address,uint256)._value (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#325) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

BlockVentureCoin.BlockVentureCoin() (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#109-135) uses literals with too many digits:
	- supply = 10000000000000000 (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#113)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

BlockVentureCoin.standard (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#61) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#7)
approveAndCall(address,uint256,bytes) should be declared external:
	- BlockVentureCoin.approveAndCall(address,uint256,bytes) (../../sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol#253-267)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/0x0747af71e2034bc2d2fcad388a264f5ccdff505c.sol analyzed (3 contracts with 93 detectors), 32 result(s) found
