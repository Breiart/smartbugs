'solc --version' running
'solc /sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running

lockEtherPay.release() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#100-108) ignores return value by token_reward.transfer(beneficiary,token_amount) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#105)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unchecked-transfer

Reentrancy in lockEtherPay.lock() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#87-93):
	External calls:
	- require(bool)(tokenBalance() > 0) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#89)
		- token_reward.balanceOf(this) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#84)
	State variables written after the call(s):
	- isLocked = true (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#92)
	lockEtherPay.isLocked (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#70) can be used in cross function reentrancies:
	- lockEtherPay.isLocked (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#70)
	- lockEtherPay.lock() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#87-93)
	- lockEtherPay.release() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#100-108)
Reentrancy in lockEtherPay.release() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#100-108):
	External calls:
	- token_amount = tokenBalance() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#104)
		- token_reward.balanceOf(this) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#84)
	- token_reward.transfer(beneficiary,token_amount) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#105)
	State variables written after the call(s):
	- isReleased = true (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#107)
	lockEtherPay.isReleased (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#71) can be used in cross function reentrancies:
	- lockEtherPay.isReleased (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#71)
	- lockEtherPay.release() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#100-108)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Reentrancy in lockEtherPay.lock() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#87-93):
	External calls:
	- require(bool)(tokenBalance() > 0) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#89)
		- token_reward.balanceOf(this) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#84)
	State variables written after the call(s):
	- end_time = start_time.add(fifty_two_weeks) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#91)
	- start_time = now (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#90)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-2

Reentrancy in lockEtherPay.release() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#100-108):
	External calls:
	- token_amount = tokenBalance() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#104)
		- token_reward.balanceOf(this) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#84)
	- token_reward.transfer(beneficiary,token_amount) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#105)
	Event emitted after the call(s):
	- TokenReleased(beneficiary,token_amount) (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#106)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-3

lockEtherPay.lockOver() (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#95-98) uses timestamp for comparisons
	Dangerous comparisons:
	- current_time > end_time (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#97)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Version constraint ^0.4.18 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.18 (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract token (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#30-35) is not in CapWords
Contract lockEtherPay (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#65-110) is not in CapWords
Variable lockEtherPay.token_reward (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#68) is not in mixedCase
Variable lockEtherPay.start_time (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#72) is not in mixedCase
Variable lockEtherPay.end_time (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#73) is not in mixedCase
Variable lockEtherPay.fifty_two_weeks (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#74) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

lockEtherPay.fifty_two_weeks (../../sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol#74) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/0x0a6f2d9d82baef6dd0f3a2f4679287680aad1fc0.sol analyzed (4 contracts with 93 detectors), 15 result(s) found
