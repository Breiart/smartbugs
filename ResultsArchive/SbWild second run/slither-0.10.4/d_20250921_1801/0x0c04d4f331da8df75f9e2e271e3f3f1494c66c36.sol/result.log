'solc --version' running
'solc /sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:96:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:101:34: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != owner) throw;
                                 ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:115:9: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        throw;
        ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:132:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function ProsperaToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:153:141: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
                                                                                                                                            ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:160:80: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      if ((_recipients.length == 0) || (_recipients.length != _values.length)) throw;
                                                                               ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:163:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (!transfer(_recipients[i], _values[i])) throw;
                                                   ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:174:43: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (msg.sender != minterContract) throw;
                                          ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:185:64: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balances[_account] + _amount < balances[_account]) throw;
                                                               ^---^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:210:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Minter (uint256 _lastMintingAmount, address _ownerContract) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:58:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(msg.sender, _to, _value);
            ^-------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:70:13: Warning: Invoking events without "emit" prefix is deprecated.
            Transfer(_from, _to, _value);
            ^--------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:81:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:148:9: Warning: Invoking events without "emit" prefix is deprecated.
        Approval(msg.sender, _spender, _value);
        ^------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:153:42: Warning: "sha3" has been deprecated in favour of "keccak256"
        if(!_spender.call(bytes4(bytes32(sha3("receiveApproval(address,uint256,address,bytes)"))), msg.sender, _value, this, _extraData)) { throw; }
                                         ^----------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:187:9: Warning: Invoking events without "emit" prefix is deprecated.
        Mint(_account, _amount);
        ^---------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:18:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance);
    ^--------------------------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:24:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success);
    ^--------------------------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:31:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success);
    ^---------------------------------------------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:37:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success);
    ^------------------------------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:42:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining);
    ^----------------------------------------------------------------------------------------^
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:50:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:63:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function balanceOf(address _owner) constant returns (uint256 balance) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:79:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:85:5: Warning: No visibility specified. Defaulting to "public". 
    function allowance(address _owner, address _spender) constant returns (uint256 remaining) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:96:5: Warning: No visibility specified. Defaulting to "public". 
    function Owned() {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:105:5: Warning: No visibility specified. Defaulting to "public". 
    function transferOwnership(address newOwner) onlyOwner returns (address _owner) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:113:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:132:5: Warning: No visibility specified. Defaulting to "public". 
    function ProsperaToken(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:146:5: Warning: No visibility specified. Defaulting to "public". 
    function approveAndCall(address _spender, uint256 _value, bytes _extraData) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:159:5: Warning: No visibility specified. Defaulting to "public". 
    function batchTransfer(address[] _recipients, uint256[] _values) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:178:5: Warning: No visibility specified. Defaulting to "public". 
    function setMinter (address newMinter) onlyOwner returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:183:5: Warning: No visibility specified. Defaulting to "public". 
    function mintToAccount(address _account, uint256 _amount) onlyMinter returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:191:5: Warning: No visibility specified. Defaulting to "public". 
    function incrementTotalSupply(uint256 _incrementValue) onlyMinter returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:210:3: Warning: No visibility specified. Defaulting to "public". 
  function Minter (uint256 _lastMintingAmount, address _ownerContract) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:217:3: Warning: No visibility specified. Defaulting to "public". 
  function calculateMintAmount() returns (uint256 amount){
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:227:3: Warning: No visibility specified. Defaulting to "public". 
  function mint() allowedMinting onlyOwner returns (bool success) {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol:217:3: Warning: Function state mutability can be restricted to view
  function calculateMintAmount() returns (uint256 amount){
  ^ (Relevant source part starts here and spans across multiple lines).


Reentrancy in Minter.mint() (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#227-232):
	External calls:
	- prosperaToken.mintToAccount(msg.sender,value) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#229)
	- updateMintingStatus(value) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#230)
		- prosperaToken.incrementTotalSupply(_mintedAmount) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#224)
	State variables written after the call(s):
	- updateMintingStatus(value) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#230)
		- lastMintingAmount = _mintedAmount (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#222)
	Minter.lastMintingAmount (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#200) can be used in cross function reentrancies:
	- Minter.Minter(uint256,address) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#210-214)
	- Minter.calculateMintAmount() (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#217-219)
	- Minter.lastMintingAmount (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#200)
	- Minter.updateMintingStatus(uint256) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#221-225)
	- updateMintingStatus(value) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#230)
		- lastMintingTime = block.timestamp (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#223)
	Minter.lastMintingTime (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#199) can be used in cross function reentrancies:
	- Minter.allowedMinting() (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#204-208)
	- Minter.lastMintingTime (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#199)
	- Minter.updateMintingStatus(uint256) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#221-225)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#reentrancy-vulnerabilities-1

Minter.updateMintingStatus(uint256) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#221-225) ignores return value by prosperaToken.incrementTotalSupply(_mintedAmount) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#224)
Minter.mint() (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#227-232) ignores return value by prosperaToken.mintToAccount(msg.sender,value) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#229)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#unused-return

Owned.transferOwnership(address) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#105-108) should emit an event for: 
	- owner = newOwner (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#106) 
ProsperaToken.setMinter(address) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#178-181) should emit an event for: 
	- minterContract = newMinter (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#179) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Owned.transferOwnership(address).newOwner (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#105) lacks a zero-check on :
		- owner = newOwner (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#106)
ProsperaToken.setMinter(address).newMinter (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#178) lacks a zero-check on :
		- minterContract = newMinter (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#179)
Minter.Minter(uint256,address)._ownerContract (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#210) lacks a zero-check on :
		- prosperaTokenAddress = _ownerContract (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#212)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

Modifier Minter.allowedMinting() (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#204-208) does not always execute _; or revert
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-modifier

Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#101):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#115):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected ! _spender.call(bytes4(bytes32(sha3()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#153):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#153):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#160):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#163):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#185):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#174):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.11 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral.
It is used by:
	- ^0.4.11 (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Low level call in ProsperaToken.approveAndCall(address,uint256,bytes) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#146-155):
	- ! _spender.call(bytes4(bytes32(sha3()(receiveApproval(address,uint256,address,bytes)))),msg.sender,_value,this,_extraData) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#153)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#low-level-calls

Parameter StandardToken.transfer(address,uint256)._to (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#50) is not in mixedCase
Parameter StandardToken.transfer(address,uint256)._value (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#50) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._from (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#63) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._to (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#63) is not in mixedCase
Parameter StandardToken.transferFrom(address,address,uint256)._value (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#63) is not in mixedCase
Parameter StandardToken.balanceOf(address)._owner (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#75) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._spender (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#79) is not in mixedCase
Parameter StandardToken.approve(address,uint256)._value (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#79) is not in mixedCase
Parameter StandardToken.allowance(address,address)._owner (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#85) is not in mixedCase
Parameter StandardToken.allowance(address,address)._spender (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#85) is not in mixedCase
Parameter ProsperaToken.approveAndCall(address,uint256,bytes)._spender (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#146) is not in mixedCase
Parameter ProsperaToken.approveAndCall(address,uint256,bytes)._value (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#146) is not in mixedCase
Parameter ProsperaToken.approveAndCall(address,uint256,bytes)._extraData (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#146) is not in mixedCase
Parameter ProsperaToken.batchTransfer(address[],uint256[])._recipients (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#159) is not in mixedCase
Parameter ProsperaToken.batchTransfer(address[],uint256[])._values (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#159) is not in mixedCase
Parameter ProsperaToken.mintToAccount(address,uint256)._account (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#183) is not in mixedCase
Parameter ProsperaToken.mintToAccount(address,uint256)._amount (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#183) is not in mixedCase
Parameter ProsperaToken.incrementTotalSupply(uint256)._incrementValue (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#191) is not in mixedCase
Parameter Minter.updateMintingStatus(uint256)._mintedAmount (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#221) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

ProsperaToken.version (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#129) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

approveAndCall(address,uint256,bytes) should be declared external:
	- ProsperaToken.approveAndCall(address,uint256,bytes) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#146-155)
batchTransfer(address[],uint256[]) should be declared external:
	- ProsperaToken.batchTransfer(address[],uint256[]) (../../sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol#159-166)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/0x0c04d4f331da8df75f9e2e271e3f3f1494c66c36.sol analyzed (5 contracts with 93 detectors), 42 result(s) found
