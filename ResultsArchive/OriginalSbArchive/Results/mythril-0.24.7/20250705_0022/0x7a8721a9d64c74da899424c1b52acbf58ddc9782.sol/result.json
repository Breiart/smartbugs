{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "address": 153,
            "contract": "Log",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4c2f04a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc",
                        "input": "0x4c2f04a400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc",
                        "name": "AddMessage(address,uint256,string)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "AddMessage(address,uint256,string)",
            "line": 79,
            "message": "The arithmetic operator can overflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "High"
        },
        {
            "address": 364,
            "contract": "Log",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000024",
                        "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000024",
                        "name": "AddMessage(address,uint256,string)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": null,
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xa21f0368",
                        "input": "0xa21f0368",
                        "name": "History(uint256)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "History(uint256)",
            "line": 75,
            "message": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "High"
        },
        {
            "address": 544,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4797f21b",
                        "input": "0x4797f21b",
                        "name": "setLog(address)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "setLog(address)",
            "line": 19,
            "message": "Use of tx.origin as a part of authorization control.\nThe tx.origin environment variable has been found to influence a control flow decision. Note that using tx.origin as a security control might cause a situation where a user inadvertently authorizes a smart contract to perform an action on their behalf. It is recommended to use msg.sender instead.\nClassification: SWC-115",
            "name": "Dependence on tx.origin (SWC 115)",
            "severity": "Low"
        },
        {
            "address": 746,
            "contract": "Log",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040",
                        "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040",
                        "name": "AddMessage(address,uint256,string)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "AddMessage(address,uint256,string)",
            "line": 86,
            "message": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation. \nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "High"
        },
        {
            "address": 770,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 52,
            "message": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107",
            "name": "External Call To User-Supplied Address (SWC 107)",
            "severity": "Low"
        },
        {
            "address": 805,
            "contract": "Log",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xa21f0368",
                        "input": "0xa21f0368",
                        "name": "History(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "History(uint256)",
            "line": 75,
            "message": "An assertion violation was triggered.\nIt is possible to trigger an assertion violation. Note that Solidity assert() statements should only be used to check invariants. Review the transaction trace generated for this issue and either make sure your program logic is correct, or use require() instead of assert() if your goal is to constrain user inputs or enforce preconditions. Remember to validate inputs from both callers (for instance, via passed arguments) and callees (for instance, via return values).\nClassification: SWC-110",
            "name": "Exception State (SWC 110)",
            "severity": "Medium"
        },
        {
            "address": 847,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 54,
            "message": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        },
        {
            "address": 854,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 54,
            "message": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        },
        {
            "address": 861,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 55,
            "message": "Read of persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        },
        {
            "address": 900,
            "contract": "Log",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040",
                        "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000040",
                        "name": "AddMessage(address,uint256,string)",
                        "origin": "0xaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",
                        "resolved_input": null,
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030",
                        "input": "0x4c2f04a40000000000000000000000000000000000000000000000000000000000000030",
                        "name": "AddMessage(address,uint256,string)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "AddMessage(address,uint256,string)",
            "message": "The arithmetic operator can underflow.\nIt is possible to cause an integer overflow or underflow in the arithmetic operation.  This issue is reported for internal compiler generated code.\nClassification: SWC-101",
            "name": "Integer Arithmetic Bugs (SWC 101)",
            "severity": "Low"
        },
        {
            "address": 1114,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4797f21b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x4797f21b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "setLog(address)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": [
                            "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        ],
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 55,
            "message": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107",
            "name": "External Call To User-Supplied Address (SWC 107)",
            "severity": "Low"
        },
        {
            "address": 1114,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 55,
            "message": "Multiple calls are executed in the same transaction.\nThis call is executed following another call within the same transaction. It is possible that the call never gets executed if a prior call fails permanently. This might be caused intentionally by a malicious callee. If possible, refactor the code such that each transaction only executes one external call or make sure that all callees can be trusted (i.e. they\u2019re part of your own codebase).\nClassification: SWC-113",
            "name": "Multiple Calls in a Single Transaction (SWC 113)",
            "severity": "Low"
        },
        {
            "address": 1114,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x9ffa0711",
                        "input": "0x9ffa0711",
                        "name": "CashOut(uint256)",
                        "origin": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "resolved_input": null,
                        "value": "0x0"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "CashOut(uint256)",
            "line": 55,
            "message": "Write to persistent state following external call\nThe contract account state is accessed after an external call to a user defined address. To prevent reentrancy issues, consider accessing the state only before the call, especially if the callee is untrusted. Alternatively, a reentrancy lock can be used to prevent untrusted callees from re-entering the contract in an intermediate state.\nClassification: SWC-107",
            "name": "State access after external call (SWC 107)",
            "severity": "Medium"
        },
        {
            "address": 1479,
            "contract": "PrivateDeposit",
            "exploit": {
                "initialState": {
                    "accounts": {
                        "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe": {
                            "balance": "0x1ce0c617cd680400",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        },
                        "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef": {
                            "balance": "0x0",
                            "code": "",
                            "nonce": 0,
                            "storage": "{}"
                        }
                    }
                },
                "steps": [
                    {
                        "address": "",
                        "calldata": "",
                        "input": "0x6060604052670de0b6b3a7640000600155341561001b57600080fd5b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100646100bf565b604051809103906000f080151561007a57600080fd5b600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100cf565b6040516105cb806106e283390190565b610604806100de6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806311bcd8301461007a57806327e235e3146100a35780634797f21b146100f05780638da5cb5b146101295780639ffa07111461017e578063ed21248c146101a1575b005b341561008557600080fd5b61008d6101ab565b6040518082815260200191505060405180910390f35b34156100ae57600080fd5b6100da600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101b1565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610127600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506101c9565b005b341561013457600080fd5b61013c610269565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561018957600080fd5b61019f600480803590602001909190505061028f565b005b6101a961046d565b005b60015481565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614151561022557600080fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548111151561046a573373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185876187965a03f1925050501561046957806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f436173684f7574000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b151561045457600080fd5b6102c65a03f1151561046557600080fd5b5050505b5b50565b600154341015156105d657346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634c2f04a433346040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200180602001828103825260078152602001807f4465706f736974000000000000000000000000000000000000000000000000008152506020019350505050600060405180830381600087803b15156105c157600080fd5b6102c65a03f115156105d257600080fd5b5050505b5600a165627a7a72305820f19d3d1b11e81753cc857ddbc199b78fecdf66829a90a806aa053d981e34a38700296060604052341561000f57600080fd5b6105ad8061001e6000396000f30060606040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634c2f04a414610051578063a21f0368146100d6575b600080fd5b341561005c57600080fd5b6100d4600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506101d0565b005b34156100e157600080fd5b6100f76004808035906020019091905050610317565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018481526020018381526020018281038252858181546001816001161561010002031660029004815260200191508054600181600116156101000203166002900480156101be5780601f10610193576101008083540402835291602001916101be565b820191906000526020600020905b8154815290600101906020018083116101a157829003601f168201915b50509550505050505060405180910390f35b82600160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426001600301819055508160016002018190555080600180019080519060200190610240929190610375565b506000805480600101828161025591906103f5565b91600052602060002090600402016000600190919091506000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600182018160010190805460018160011615610100020316600290046102fa929190610427565b506002820154816002015560038201548160030155505050505050565b60008181548110151561032657fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600101908060020154908060030154905084565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106103b657805160ff19168380011785556103e4565b828001600101855582156103e4579182015b828111156103e35782518255916020019190600101906103c8565b5b5090506103f191906104ae565b5090565b8154818355818115116104225760040281600402836000526020600020918201910161042191906104d3565b5b505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610460578054855561049d565b8280016001018555821561049d57600052602060002091601f016020900482015b8281111561049c578254825591600101919060010190610481565b5b5090506104aa91906104ae565b5090565b6104d091905b808211156104cc5760008160009055506001016104b4565b5090565b90565b61053691905b8082111561053257600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006105199190610539565b60028201600090556003820160009055506004016104d9565b5090565b90565b50805460018160011615610100020316600290046000825580601f1061055f575061057e565b601f01602090049060005260206000209081019061057d91906104ae565b5b505600a165627a7a72305820382aeef9799de03dfed035262ae9465ec2ee6a909083947dec2344dce1aa68de0029",
                        "name": "unknown",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0x4797f21b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "input": "0x4797f21b000000000000000000000000deadbeefdeadbeefdeadbeefdeadbeefdeadbeef",
                        "name": "setLog(address)",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": [
                            "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        ],
                        "value": "0x0"
                    },
                    {
                        "address": "0x901d12ebe1b195e5aa8748e62bd7734ae19b51f",
                        "calldata": "0xed21248c",
                        "input": "0xed21248c",
                        "name": "Deposit()",
                        "origin": "0xaffeaffeaffeaffeaffeaffeaffeaffeaffeaffe",
                        "resolved_input": null,
                        "value": "0xde0b6b3a7640000"
                    }
                ]
            },
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/0x7a8721a9d64c74da899424c1b52acbf58ddc9782.sol",
            "function": "Deposit()",
            "line": 43,
            "message": "A call to a user-supplied address is executed.\nAn external message call to an address specified by the caller is executed. Note that the callee account might contain arbitrary code and could re-enter any function within this contract. Reentering the contract in an intermediate state may lead to unexpected behaviour. Make sure that no state modifications are executed after this call and/or reentrancy guards are in place.\nClassification: SWC-107",
            "name": "External Call To User-Supplied Address (SWC 107)",
            "severity": "Low"
        }
    ],
    "infos": [],
    "parser": {
        "id": "mythril-0.24.7",
        "mode": "solidity",
        "version": "2024/03/24"
    }
}
