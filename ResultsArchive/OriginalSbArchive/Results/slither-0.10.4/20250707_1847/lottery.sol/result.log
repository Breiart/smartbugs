'solc --version' running
'solc /sb/lottery.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/lottery.sol:
/sb/lottery.sol:24:6: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
     function Lottery() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/lottery.sol:30:10: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         throw;
         ^---^
/sb/lottery.sol:48:18: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
                 throw;
                 ^---^
/sb/lottery.sol:55:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if(msg.sender != organizer) { throw; }
                                       ^---^
/sb/lottery.sol:64:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
         if(msg.sender != organizer) { throw; }
                                       ^---^
/sb/lottery.sol:58:14: Warning: Invoking events without "emit" prefix is deprecated.
             GetBet(bets[i].betAmount, bets[i].blockNumber, bets[i].won);
             ^---------------------------------------------------------^
/sb/lottery.sol:66:10: Warning: "suicide" has been deprecated in favour of "selfdestruct"
         suicide(organizer);
         ^----------------^
/sb/lottery.sol:24:6: Warning: No visibility specified. Defaulting to "public". 
     function Lottery() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/lottery.sol:29:6: Warning: No visibility specified. Defaulting to "public". 
     function() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/lottery.sol:34:6: Warning: No visibility specified. Defaulting to "public". 
     function makeBet() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/lottery.sol:42:24: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
         bets.push(Bet(msg.value, block.number, won));
                       ^-------^
/sb/lottery.sol:46:34: Warning: "msg.value" used in non-payable function. Do you want to add the "payable" modifier to this function?
             if(!msg.sender.send(msg.value)) {
                                 ^-------^
/sb/lottery.sol:54:6: Warning: No visibility specified. Defaulting to "public". 
     function getBets() {
     ^ (Relevant source part starts here and spans across multiple lines).
/sb/lottery.sol:63:6: Warning: No visibility specified. Defaulting to "public". 
     function destroy() {
     ^ (Relevant source part starts here and spans across multiple lines).


Lottery (../../sb/lottery.sol#11-68) contract sets array length with a user-controlled value:
	- bets.push(Bet(msg.value,block.number,won)) (../../sb/lottery.sol#42)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#array-length-assignment

Lottery.makeBet() (../../sb/lottery.sol#34-51) uses a dangerous strict equality:
	- won = (block.number % 2) == 0 (../../sb/lottery.sol#38)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Deprecated standard detected THROW (../../sb/lottery.sol#30):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/lottery.sol#48):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/lottery.sol#55):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/lottery.sol#64):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected suicide(address)(organizer) (../../sb/lottery.sol#66):
	- Usage of "suicide()" should be replaced with "selfdestruct()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.0 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction
	- IdentityPrecompileReturnIgnored
	- HighOrderByteCleanStorage
	- OptimizerStaleKnowledgeAboutSHA3
	- LibrariesNotCallableFromPayableFunctions.
It is used by:
	- ^0.4.0 (../../sb/lottery.sol#9)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Loop condition i < bets.length (../../sb/lottery.sol#57) should use cached array length instead of referencing `length` member of the storage array.
 Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#cache-array-length
/sb/lottery.sol analyzed (1 contracts with 93 detectors), 10 result(s) found
