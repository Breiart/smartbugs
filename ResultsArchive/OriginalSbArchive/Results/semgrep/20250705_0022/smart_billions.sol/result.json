{
    "errors": [],
    "fails": [],
    "findings": [
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 681,
            "message": "Caching the array length outside a loop saves reading it on each iteration, as long as the array's length is not changed during the loop.",
            "name": "array-length-outside-loop"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 379,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 410,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 413,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 416,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 474,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 639,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 643,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 656,
            "message": "<x> += <y> costs more gas than <x> = <x> + <y> for state variables.",
            "name": "inefficient-state-variable-increment"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 139,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 143,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 149,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 150,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 151,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 152,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 153,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 160,
            "message": "Uninitialized variables are assigned with the types default value. Explicitly initializing a variable with its default value costs unnecessary gas.",
            "name": "init-variables-with-default-value"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 470,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 471,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 681,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 682,
            "message": "Replace state variable reads and writes within loops with local variable reads and writes.",
            "name": "state-variable-read-in-a-loop"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 290,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 318,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 320,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 401,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 636,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 673,
            "message": "Using multiple require statements is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-multiple-require"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 339,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 340,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 341,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 342,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 343,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 344,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 345,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 346,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 347,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 348,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 348,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 349,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 350,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 361,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 362,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 363,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 364,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 365,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 366,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 609,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 610,
            "message": "Using nested is cheaper than using && multiple check combinations. There are more advantages, such as easier to read code and better coverage reports.",
            "name": "use-nested-if"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 349,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 470,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 652,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 681,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        },
        {
            "category": "performance",
            "filename": "/home/user/Documents/GitHub/smartbugs-curated/Splits/QuartoSplit/smart_billions.sol",
            "line": 764,
            "message": "Consider using the prefix increment expression whenever the return value is not needed. The prefix increment expression is cheaper in terms of gas.",
            "name": "use-prefix-increment-not-postfix"
        }
    ],
    "infos": [],
    "parser": {
        "id": "semgrep",
        "mode": "solidity",
        "version": "2023/08/21"
    }
}
