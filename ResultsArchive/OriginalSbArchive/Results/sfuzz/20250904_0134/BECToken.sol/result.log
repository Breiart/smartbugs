Extract contract BasicToken from /sb/BECToken.sol
Extract contract BecToken from /sb/BECToken.sol
Extract contract Ownable from /sb/BECToken.sol
Extract contract Pausable from /sb/BECToken.sol
Extract contract PausableToken from /sb/BECToken.sol
Extract contract SafeMath from /sb/BECToken.sol
Extract contract StandardToken from /sb/BECToken.sol
Extracted 7 contract(s) from /sb/BECToken.sol
[0;32m> Created "fuzzMe"[0m
[0;32m> To fuzz contracts:[0m
  chmod +x fuzzMe
  ./fuzzMe
contracts/Pausable.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/Pausable.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/Pausable.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/Pausable.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/Pausable.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/Pausable.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/Pausable.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/Pausable.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Pausable.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/BecToken.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/BecToken.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/BecToken.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/BecToken.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/BecToken.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/BecToken.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/BecToken.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BecToken.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/Ownable.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/Ownable.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/Ownable.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/Ownable.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/Ownable.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/Ownable.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/Ownable.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/Ownable.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/BasicToken.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/BasicToken.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/BasicToken.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/BasicToken.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/BasicToken.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/BasicToken.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/BasicToken.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/BasicToken.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/StandardToken.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/StandardToken.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/StandardToken.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/StandardToken.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/StandardToken.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/StandardToken.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/StandardToken.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/StandardToken.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/PausableToken.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/PausableToken.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/PausableToken.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/PausableToken.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/PausableToken.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/PausableToken.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/PausableToken.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/PausableToken.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:171:3: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:297:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:72:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(msg.sender, _to, _value);
    ^-------------------------------^
contracts/SafeMath.sol:124:5: Warning: Invoking events without "emit" prefix is deprecated.
    Transfer(_from, _to, _value);
    ^--------------------------^
contracts/SafeMath.sol:140:5: Warning: Invoking events without "emit" prefix is deprecated.
    Approval(msg.sender, _spender, _value);
    ^------------------------------------^
contracts/SafeMath.sol:191:5: Warning: Invoking events without "emit" prefix is deprecated.
    OwnershipTransferred(owner, newOwner);
    ^-----------------------------------^
contracts/SafeMath.sol:229:5: Warning: Invoking events without "emit" prefix is deprecated.
    Pause();
    ^-----^
contracts/SafeMath.sol:237:5: Warning: Invoking events without "emit" prefix is deprecated.
    Unpause();
    ^-------^
contracts/SafeMath.sol:271:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _receivers[i], _value);
        ^-----------------------------------------^
contracts/SafeMath.sol:171:3: Warning: No visibility specified. Defaulting to "public". 
  function Ownable() {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:297:5: Warning: No visibility specified. Defaulting to "public". 
    function BecToken() {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:302:5: Warning: No visibility specified. Defaulting to "public". 
    function () {
    ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:14:3: Warning: Function state mutability can be restricted to pure
  function mul(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:20:3: Warning: Function state mutability can be restricted to pure
  function div(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:27:3: Warning: Function state mutability can be restricted to pure
  function sub(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
contracts/SafeMath.sol:32:3: Warning: Function state mutability can be restricted to pure
  function add(uint256 a, uint256 b) internal constant returns (uint256) {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/NormalAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
assets/ReentrancyAttacker.sol:8:7: Warning: Return value of low-level calls not used.
      msg.sender.call(bytes4(255));
      ^--------------------------^
assets/ReentrancyAttacker.sol:5:3: Warning: No visibility specified. Defaulting to "public". 
  function() payable {
  ^ (Relevant source part starts here and spans across multiple lines).
>> Fuzz Pausable
** Write stats: 0.006952
** Write stats: 5.00012
** Write stats: 10.0014
** Write stats: 15.0002
** Write stats: 20.0001
** Write stats: 25.0001
** Write stats: 30.0002
** Write stats: 35.0001
** Write stats: 40.0001
** Write stats: 45.0003
** Write stats: 50.0005
** Write stats: 55.0004
** Write stats: 60.0003
** Write stats: 65.0005
** Write stats: 70.0006
** Write stats: 75.0002
** Write stats: 80.0006
** Write stats: 85.0002
** Write stats: 90.0007
** Write stats: 95.0132
** Write stats: 100.023
** Write stats: 105.001
** Write stats: 110
** Write stats: 115
** Write stats: 120
** Write stats: 120.016
>> Fuzz BecToken
** Write stats: 0.021668
** Write stats: 5.0037
** Write stats: 10.0049
** Write stats: 15.009
** Write stats: 20.0052
** Write stats: 25.0088
** Write stats: 30.0035
** Write stats: 35.0032
** Write stats: 40.0062
** Write stats: 45.0129
** Write stats: 50.027
** Write stats: 55.0338
** Write stats: 60.0141
** Write stats: 65.0117
** Write stats: 70.0059
** Write stats: 75.0314
** Write stats: 80.0304
** Write stats: 85.007
** Write stats: 90.0472
** Write stats: 95.0323
** Write stats: 100.037
** Write stats: 105.027
** Write stats: 110.024
** Write stats: 115.057
** Write stats: 120.027
** Write stats: 120.113
>> Fuzz Ownable
** Write stats: 0.003189
** Write stats: 5.00014
** Write stats: 10.0002
** Write stats: 15.0002
** Write stats: 20.0003
** Write stats: 25.0002
** Write stats: 30.0001
** Write stats: 35.0002
** Write stats: 40.0001
** Write stats: 45
** Write stats: 50.0001
** Write stats: 55.0001
** Write stats: 60.0002
** Write stats: 65.0001
** Write stats: 70.0001
** Write stats: 75.0001
** Write stats: 80.0001
** Write stats: 85.0001
** Write stats: 90.0002
** Write stats: 95
** Write stats: 100
** Write stats: 105
** Write stats: 110
** Write stats: 115
** Write stats: 120
** Write stats: 120.008
>> Fuzz BasicToken
** Write stats: 0.00372
** Write stats: 5.00014
** Write stats: 10.0001
** Write stats: 15.0002
** Write stats: 20.0004
** Write stats: 25.0003
** Write stats: 30.0001
** Write stats: 35.0003
** Write stats: 40.0001
** Write stats: 45.0001
** Write stats: 50.0002
** Write stats: 55.0001
** Write stats: 60.0002
** Write stats: 65.0002
** Write stats: 70.008
** Write stats: 75.0002
** Write stats: 80.0003
** Write stats: 85.0001
** Write stats: 90.0002
** Write stats: 95.0001
** Write stats: 100
** Write stats: 105
** Write stats: 110
** Write stats: 115
** Write stats: 120.006
>> Fuzz StandardToken
** Write stats: 0.007114
** Write stats: 5.00146
** Write stats: 10.001
** Write stats: 15.0002
** Write stats: 20.0006
** Write stats: 25.0007
** Write stats: 30.0008
** Write stats: 35.0039
** Write stats: 40.005
** Write stats: 45.0028
** Write stats: 50.0033
** Write stats: 55.0016
** Write stats: 60.0006
** Write stats: 65.0001
** Write stats: 70.0028
** Write stats: 75.0066
** Write stats: 80.0034
** Write stats: 85.0079
** Write stats: 90.0051
** Write stats: 95.007
** Write stats: 100.005
** Write stats: 105.004
** Write stats: 110.005
** Write stats: 115
** Write stats: 120.008
** Write stats: 120.02
>> Fuzz PausableToken
** Write stats: 0.019797
** Write stats: 5.0055
** Write stats: 10.0032
** Write stats: 15.0044
** Write stats: 20.013
** Write stats: 25.0112
** Write stats: 30.0147
** Write stats: 35.0222
** Write stats: 40.0152
** Write stats: 45.0078
** Write stats: 50.0339
** Write stats: 55.0152
** Write stats: 60.0095
** Write stats: 65.0388
** Write stats: 70.0478
** Write stats: 75.0073
** Write stats: 80.0395
** Write stats: 85.0332
** Write stats: 90.0514
** Write stats: 95.198
** Write stats: 100.015
** Write stats: 105.001
** Write stats: 110.004
** Write stats: 115.026
** Write stats: 120.398
>> Fuzz SafeMath
** Write stats: 0.001959
** Write stats: 5.00004
** Write stats: 10
** Write stats: 15.0001
** Write stats: 20.0001
** Write stats: 25.0001
** Write stats: 30
** Write stats: 35.0001
** Write stats: 40
** Write stats: 45
** Write stats: 50.0001
** Write stats: 55.1296
** Write stats: 60.0001
** Write stats: 65.0001
** Write stats: 70.0001
** Write stats: 75.0001
** Write stats: 80
** Write stats: 85.0001
** Write stats: 90
** Write stats: 95
** Write stats: 100
** Write stats: 105
** Write stats: 120.004
** Write stats: 120.006
