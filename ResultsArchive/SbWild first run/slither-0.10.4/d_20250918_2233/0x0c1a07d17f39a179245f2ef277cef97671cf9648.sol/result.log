'solc --version' running
'solc /sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol:
/sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol:86:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function HP () public {
    ^ (Relevant source part starts here and spans across multiple lines).


HP.fallback() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#114-133) performs a multiplication on the result of a division:
	- valueToGive = valueToGive.div(1000000).mul(999999) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#127)
HP.buyToken(address,uint256) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#135-153) performs a multiplication on the result of a division:
	- toGive = tokenPerETH.mul(_invest) / 1000000000000000000 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#136)
	- bonus = toGive * 30 / 100 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#146)
HP.buyToken(address,uint256) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#135-153) performs a multiplication on the result of a division:
	- toGive = tokenPerETH.mul(_invest) / 1000000000000000000 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#136)
	- bonus = toGive * 20 / 100 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#143)
HP.buyToken(address,uint256) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#135-153) performs a multiplication on the result of a division:
	- toGive = tokenPerETH.mul(_invest) / 1000000000000000000 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#136)
	- bonus = toGive * 10 / 100 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#140)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#divide-before-multiply

HP.totalSupply (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#59) shadows:
	- ERC20Basic.totalSupply (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#34)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variable-shadowing-from-abstract-contracts

HP.transferOwnership(address) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#92-96) should emit an event for: 
	- owner = newOwner (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#94) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

HP.fallback() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#114-133) compares to a boolean constant:
	-require(bool)(blacklist[investor] == false) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#120)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#boolean-equality

HP.totalRemaining (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#64) is set pre-construction with a non-constant function or state variable:
	- totalSupply.sub(totalDistributed)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.4.18 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder.
It is used by:
	- ^0.4.18 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#3)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter HP.distr(address,uint256)._to (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#104) is not in mixedCase
Parameter HP.distr(address,uint256)._amount (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#104) is not in mixedCase
Parameter HP.buyToken(address,uint256)._investor (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#135) is not in mixedCase
Parameter HP.buyToken(address,uint256)._invest (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#135) is not in mixedCase
Parameter HP.balanceOf(address)._owner (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#155) is not in mixedCase
Parameter HP.transfer(address,uint256)._to (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#164) is not in mixedCase
Parameter HP.transfer(address,uint256)._amount (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#164) is not in mixedCase
Parameter HP.transferFrom(address,address,uint256)._from (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#175) is not in mixedCase
Parameter HP.transferFrom(address,address,uint256)._to (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#175) is not in mixedCase
Parameter HP.transferFrom(address,address,uint256)._amount (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#175) is not in mixedCase
Parameter HP.approve(address,uint256)._spender (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#188) is not in mixedCase
Parameter HP.approve(address,uint256)._value (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#188) is not in mixedCase
Parameter HP.allowance(address,address)._owner (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#195) is not in mixedCase
Parameter HP.allowance(address,address)._spender (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#195) is not in mixedCase
Parameter HP.withdrawAltcoinTokens(address)._tokenContract (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#211) is not in mixedCase
Parameter HP.burn(uint256)._value (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#217) is not in mixedCase
Parameter HP.burnFrom(uint256,address)._value (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#227) is not in mixedCase
Parameter HP.burnFrom(uint256,address)._burner (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#227) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

HP.HP() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#86-90) uses literals with too many digits:
	- teamtoken = 2500000000e18 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#88)
HP.fallback() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#114-133) uses literals with too many digits:
	- valueToGive = valueToGive.div(1000000).mul(999999) (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#127)
HP.slitherConstructorVariables() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#47-236) uses literals with too many digits:
	- totalSupply = 25000000000e18 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#59)
HP.slitherConstructorVariables() (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#47-236) uses literals with too many digits:
	- tokenPerETH = 1300000e18 (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#61)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#too-many-digits

HP.tokenPerETH (../../sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol#61) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/0x0c1a07d17f39a179245f2ef277cef97671cf9648.sol analyzed (5 contracts with 93 detectors), 33 result(s) found
