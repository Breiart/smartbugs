'solc --version' running
'solc /sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:33:7: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
      throw;
      ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:62:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function BBY(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:76:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                               // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:77:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:78:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;           // Check if the sender has enough
                                            ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:79:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // Check for overflows
                                                      ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:88:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:96:25: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_to == 0x0) throw;                                // Prevent transfer to 0x0 address. Use burn() instead
                        ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:97:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:98:40: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough
                                       ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:99:55: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows
                                                      ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:100:52: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (_value > allowance[_from][msg.sender]) throw;     // Check allowance
                                                   ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:109:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:110:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:118:45: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (balanceOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                            ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:119:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:127:44: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
        if (freezeOf[msg.sender] < _value) throw;            // Check if the sender has enough
                                           ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:128:20: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if (_value <= 0) throw; 
		                 ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:137:26: Warning: "throw" is deprecated in favour of "revert()", "require()" and "assert()".
		if(msg.sender != owner)throw;
		                       ^---^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:31:3: Warning: This declaration shadows a builtin symbol.
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:82:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(msg.sender, _to, _value);                   // Notify anyone listening that this transfer took place
        ^-------------------------------^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:104:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:113:9: Warning: Invoking events without "emit" prefix is deprecated.
        Burn(msg.sender, _value);
        ^----------------------^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:122:9: Warning: Invoking events without "emit" prefix is deprecated.
        Freeze(msg.sender, _value);
        ^------------------------^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:131:9: Warning: Invoking events without "emit" prefix is deprecated.
        Unfreeze(msg.sender, _value);
        ^--------------------------^
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:62:5: Warning: No visibility specified. Defaulting to "public". 
    function BBY(
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:75:5: Warning: No visibility specified. Defaulting to "public". 
    function transfer(address _to, uint256 _value) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:86:5: Warning: No visibility specified. Defaulting to "public". 
    function approve(address _spender, uint256 _value)
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:95:5: Warning: No visibility specified. Defaulting to "public". 
    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:108:5: Warning: No visibility specified. Defaulting to "public". 
    function burn(uint256 _value) returns (bool success) {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:117:2: Warning: No visibility specified. Defaulting to "public". 
	function freeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:126:2: Warning: No visibility specified. Defaulting to "public". 
	function unfreeze(uint256 _value) returns (bool success) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:136:2: Warning: No visibility specified. Defaulting to "public". 
	function withdrawEther(uint256 amount) {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:142:2: Warning: No visibility specified. Defaulting to "public". 
	function() payable {
 ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol:31:3: Warning: Function state mutability can be restricted to pure
  function assert(bool assertion) internal {
  ^ (Relevant source part starts here and spans across multiple lines).


BBY (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#37-145) has incorrect ERC20 function interface:BBY.transfer(address,uint256) (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#75-83)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

SafeMath.assert(bool) (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#31-35) (function) shadows built-in symbol"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#builtin-symbol-shadowing

SafeMath.safeDiv(uint256,uint256) (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#13-18) is never used and should be removed
SafeMath.safeMul(uint256,uint256) (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#7-11) is never used and should be removed
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dead-code

Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#33):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#76):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#77):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#78):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#79):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#88):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#96):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#97):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#98):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#99):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#100):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#109):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#110):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#118):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#119):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#127):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#128):
	- Usage of "throw" should be replaced with "revert()"
Deprecated standard detected THROW (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#137):
	- Usage of "throw" should be replaced with "revert()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

Version constraint ^0.4.8 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector
	- DelegateCallReturnValue
	- ECRecoverMalformedInput
	- SkipEmptyStringLiteral
	- ConstantOptimizerSubtraction.
It is used by:
	- ^0.4.8 (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Parameter BBY.transfer(address,uint256)._to (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#75) is not in mixedCase
Parameter BBY.transfer(address,uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#75) is not in mixedCase
Parameter BBY.approve(address,uint256)._spender (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#86) is not in mixedCase
Parameter BBY.approve(address,uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#86) is not in mixedCase
Parameter BBY.transferFrom(address,address,uint256)._from (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#95) is not in mixedCase
Parameter BBY.transferFrom(address,address,uint256)._to (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#95) is not in mixedCase
Parameter BBY.transferFrom(address,address,uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#95) is not in mixedCase
Parameter BBY.burn(uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#108) is not in mixedCase
Parameter BBY.freeze(uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#117) is not in mixedCase
Parameter BBY.unfreeze(uint256)._value (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#126) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

BBY.decimals (../../sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol#40) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant
/sb/0x715b88dff71dc777559b9d654dfce55071f8e177.sol analyzed (2 contracts with 93 detectors), 35 result(s) found
