'solc --version' running
'solc /sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol --combined-json abi,ast,bin,bin-runtime,srcmap,srcmap-runtime,userdoc,devdoc,hashes,compact-format --allow-paths .,/sb' running
Compilation warnings/errors on /sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:6:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Owned() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:38:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function TokenBase() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:91:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function WorkProff() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:134:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Option() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:189:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use "constructor(...) { ... }" instead.
    function Token() public {
    ^ (Relevant source part starts here and spans across multiple lines).
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:21:28: Warning: Functions in interfaces should be declared external.
interface tokenRecipient { function receiveApproval(address _from, uint _value, address _token, bytes _extraData) public; }
                           ^--------------------------------------------------------------------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:49:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(_from, _to, _value);
        ^--------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:80:27: Warning: Using "years" as a unit denomination is deprecated.
    uint public oneYear = 1 years;
                          ^-----^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:97:27: Warning: "sha3" has been deprecated in favour of "keccak256"
        bytes8 n = bytes8(sha3(nonce, minerCurrentChallenge));
                          ^--------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:97:27: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        bytes8 n = bytes8(sha3(nonce, minerCurrentChallenge));
                          ^--------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:117:33: Warning: "sha3" has been deprecated in favour of "keccak256"
        minerCurrentChallenge = sha3(nonce, minerCurrentChallenge, block.blockhash(block.number - 1));
                                ^-------------------------------------------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:117:33: Warning: This function only accepts a single "bytes" argument. Please use "abi.encodePacked(...)" or a similar function to encode the data.
        minerCurrentChallenge = sha3(nonce, minerCurrentChallenge, block.blockhash(block.number - 1));
                                ^-------------------------------------------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:126:38: Warning: Using "years" as a unit denomination is deprecated.
    uint public optionExerciseSpan = 1 years;               // 期权：行权间隔
                                     ^-----^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:164:9: Warning: Invoking events without "emit" prefix is deprecated.
        OptionTransfer(_from, _to, _option, _exercised);
        ^---------------------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:178:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, value);
        ^----------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:179:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, msg.sender, value);
        ^-------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:180:9: Warning: Invoking events without "emit" prefix is deprecated.
        OptionExercise(msg.sender, value);
        ^-------------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:201:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, value);
        ^----------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:202:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, owner, value);
        ^--------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:210:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(0, this, value);
        ^----------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:211:9: Warning: Invoking events without "emit" prefix is deprecated.
        Transfer(this, owner, value);
        ^--------------------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:117:68: Warning: "block.blockhash()" has been deprecated in favor of "blockhash()"
        minerCurrentChallenge = sha3(nonce, minerCurrentChallenge, block.blockhash(block.number - 1));
                                                                   ^-------------^
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol:140:5: Warning: Function state mutability can be restricted to pure
    function min(uint a, uint b) private returns (uint) {
    ^ (Relevant source part starts here and spans across multiple lines).


Token (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#184-214) has incorrect ERC20 function interface:TokenBase.transfer(address,uint256) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#53-55)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-erc20-interface

TokenBase._transfer(address,address,uint256) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#42-51) uses a dangerous strict equality:
	- assert(bool)(balanceOf[_from] + balanceOf[_to] == previousBalances) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#50)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#dangerous-strict-equalities

Owned.transferOwnership(address) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#15-17) should emit an event for: 
	- owner = newOwner (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#16) 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-events-access-control

Owned.transferOwnership(address).newOwner (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#15) lacks a zero-check on :
		- owner = newOwner (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#16)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#missing-zero-address-validation

WorkProff.proofOfWork(uint256) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#95-118) uses timestamp for comparisons
	Dangerous comparisons:
	- require(bool)(n >= bytes8(minerDifficulty)) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#98)
	- require(bool)(timeSinceLastProof >= 5) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#101)
	- now - foundingTime < minerPreTime (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#105)
Option.min(uint256,uint256) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#140-142) uses timestamp for comparisons
	Dangerous comparisons:
	- a < b (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#141)
Option._checkOptionExercise(uint256,uint256) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#144-147) uses timestamp for comparisons
	Dangerous comparisons:
	- exercised <= option * canExercisedTimes / optionTotalTimes (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#146)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#block-timestamp

Deprecated standard detected n = bytes8(sha3()(nonce,minerCurrentChallenge)) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#97):
	- Usage of "sha3()" should be replaced with "keccak256()"
Deprecated standard detected minerCurrentChallenge = sha3()(nonce,minerCurrentChallenge,block.blockhash(block.number - 1)) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#117):
	- Usage of "block.blockhash()" should be replaced with "blockhash()"
	- Usage of "sha3()" should be replaced with "keccak256()"
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#deprecated-standards

TokenBase.tokenUnit (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#29) is set pre-construction with a non-constant function or state variable:
	- 10 ** uint256(decimals)
TokenBase.wanUnit (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#30) is set pre-construction with a non-constant function or state variable:
	- 10000 * tokenUnit
WorkProff.minerTotalSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#81) is set pre-construction with a non-constant function or state variable:
	- 3900 * wanUnit
WorkProff.minerTotalTime (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#83) is set pre-construction with a non-constant function or state variable:
	- minerTotalYears * oneYear
WorkProff.minerPreSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#84) is set pre-construction with a non-constant function or state variable:
	- minerTotalSupply / 2
Option.optionInitialSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#124) is set pre-construction with a non-constant function or state variable:
	- 6600 * wanUnit
Token.initialSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#185) is set pre-construction with a non-constant function or state variable:
	- 0 * wanUnit
Token.reserveSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#186) is set pre-construction with a non-constant function or state variable:
	- 10500 * wanUnit
Token.sellSupply (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#187) is set pre-construction with a non-constant function or state variable:
	- 9000 * wanUnit
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#function-initializing-state

Version constraint ^0.4.17 contains known severe issues (https://solidity.readthedocs.io/en/latest/bugs.html)
	- DirtyBytesArrayToStorage
	- ABIDecodeTwoDimensionalArrayMemory
	- KeccakCaching
	- EmptyByteArrayCopy
	- DynamicArrayCleanup
	- ImplicitConstructorCallvalueCheck
	- TupleAssignmentMultiStackSlotComponents
	- MemoryArrayCreationOverflow
	- privateCanBeOverridden
	- SignedArrayStorageCopy
	- ABIEncoderV2StorageArrayWithMultiSlotElement
	- DynamicConstructorArgumentsClippedABIV2
	- UninitializedFunctionPointerInConstructor_0.4.x
	- IncorrectEventSignatureInLibraries_0.4.x
	- ExpExponentCleanup
	- EventStructWrongData
	- NestedArrayFunctionCallDecoder
	- ZeroFunctionSelector.
It is used by:
	- ^0.4.17 (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#1)
solc-0.4.26 is an outdated solc version. Use a more recent version (at least 0.8.0), if possible.
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#incorrect-versions-of-solidity

Contract tokenRecipient (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#21) is not in CapWords
Parameter TokenBase.transfer(address,uint256)._to (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#53) is not in mixedCase
Parameter TokenBase.transfer(address,uint256)._value (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#53) is not in mixedCase
Parameter TokenBase.transferFrom(address,address,uint256)._from (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#57) is not in mixedCase
Parameter TokenBase.transferFrom(address,address,uint256)._to (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#57) is not in mixedCase
Parameter TokenBase.transferFrom(address,address,uint256)._value (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#57) is not in mixedCase
Parameter TokenBase.approve(address,uint256)._spender (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#64) is not in mixedCase
Parameter TokenBase.approve(address,uint256)._value (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#64) is not in mixedCase
Parameter TokenBase.approveAndCall(address,uint256,bytes)._spender (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#69) is not in mixedCase
Parameter TokenBase.approveAndCall(address,uint256,bytes)._value (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#69) is not in mixedCase
Parameter TokenBase.approveAndCall(address,uint256,bytes)._extraData (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#69) is not in mixedCase
Parameter Option.optionTransfer(address,uint256,uint256)._to (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#169) is not in mixedCase
Parameter Option.optionTransfer(address,uint256,uint256)._option (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#169) is not in mixedCase
Parameter Option.optionTransfer(address,uint256,uint256)._exercised (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#169) is not in mixedCase
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#conformance-to-solidity-naming-conventions

Option.optionExerciseSpan (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#126) should be constant 
Option.optionTotalTimes (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#125) should be constant 
TokenBase.decimals (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#27) should be constant 
WorkProff.minerPreTime (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#85) should be constant 
WorkProff.minerTotalReward (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#86) should be constant 
WorkProff.minerTotalYears (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#82) should be constant 
WorkProff.oneYear (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#80) should be constant 
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#state-variables-that-could-be-declared-constant

receiveApproval(address,uint256,address,bytes) should be declared external:
	- tokenRecipient.receiveApproval(address,uint256,address,bytes) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#21)
approveAndCall(address,uint256,bytes) should be declared external:
	- TokenBase.approveAndCall(address,uint256,bytes) (../../sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol#69-75)
Reference: https://github.com/crytic/slither/wiki/Detector-Documentation#public-function-that-could-be-declared-external
/sb/0x0a7d11ea2308f80eb239f2e4c77715725ae8650d.sol analyzed (6 contracts with 93 detectors), 43 result(s) found
